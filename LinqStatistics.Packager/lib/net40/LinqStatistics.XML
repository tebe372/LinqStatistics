<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinqStatistics</name>
    </assembly>
    <members>
        <member name="T:LinqStatistics.Bin">
            <summary>
            A discrete count of items which fall into a given range
            </summary>
        </member>
        <member name="T:LinqStatistics.ItemCount`1">
            <summary>
            Represents a Histogram bin
            </summary>
            <typeparam name="T">The type of the Bin value</typeparam>
        </member>
        <member name="M:LinqStatistics.ItemCount`1.#ctor(`0,System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="v"></param>
            <param name="count"></param>
        </member>
        <member name="M:LinqStatistics.ItemCount`1.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
            <param name="obj"></param>
            <returns>True if obj is a Bin{T} and Value and Count are equal</returns>
        </member>
        <member name="M:LinqStatistics.ItemCount`1.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns>Hash of Value and Count</returns>
        </member>
        <member name="M:LinqStatistics.ItemCount`1.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:LinqStatistics.ItemCount`1.RepresentativeValue">
            <summary>
            The value represented by the bin
            </summary>
        </member>
        <member name="P:LinqStatistics.ItemCount`1.Count">
            <summary>
            The number of times Value appears in the source data
            </summary>
        </member>
        <member name="M:LinqStatistics.Bin.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="v">Representative value for the Bin</param>
            <param name="min">The minimum value of the Range</param>
            <param name="max">The maximum value of the range</param>
            <param name="count">The number of items in the Bin</param>
            <param name="maxInclusive">Should Max be included in the Range or excluded - default is excluded</param>
        </member>
        <member name="M:LinqStatistics.Bin.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinqStatistics.Bin.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:LinqStatistics.Bin.ToString">
            <summary>
            <see cref="M:System.Object.ToString"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:LinqStatistics.Bin.Range">
            <summary>
            The range
            </summary>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.BinCountSturges``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            http://en.wikipedia.org/wiki/Histogram#Number_of_bins_and_width
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.BinCountSquareRoot``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            http://en.wikipedia.org/wiki/Histogram#Number_of_bins_and_width
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.BinCountRice``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            http://en.wikipedia.org/wiki/Histogram#Number_of_bins_and_width
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.CountEach``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Counts each unique element in a sequence
            </summary>
            <typeparam name="T">The type of the sequence</typeparam>
            <param name="source">The sequence to count</param>
            <param name="comparer">Comparer used to determine equality between elements</param>
            <returns>The count of each unique element</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.CountEach``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Counts each unique element in a sequence
            </summary>
            <typeparam name="T">The type of the sequence</typeparam>
            <param name="source">The sequence to count</param>
            <returns>The count of each unique element</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.CountEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Counts each unique element in a sequence
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <typeparam name="TResult">The type of the element selected</typeparam>
            <param name="source">A sequence of values to calculate the unique count of.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>The count of each unique element</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.AllValues``1(System.Collections.Generic.IEnumerable{System.Nullable{``0}})">
            <summary>
            Returns all non-null items in a sequence
            </summary>
            <typeparam name="T">The type of the sequence</typeparam>
            <param name="source">The Sequence</param>
            <returns>All non-null elements in the sequence</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.AllValues``1(System.Collections.Generic.IEnumerable{System.Tuple{System.Nullable{``0},System.Nullable{``0}}})">
            <summary>
            Returns all elements in a sequence of Tuples where the Tuple's are not null
            </summary>
            <typeparam name="T">The type of the Tuple's Items</typeparam>
            <param name="source">The sequence</param>
            <returns>All Tuples in the sequence with non-null items</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Int32},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of int values.
            </summary>
            <param name="source">A sequence of int values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of int values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable int values.
            </summary>
            <param name="source">A sequence of nullable int values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable int values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Int32},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of int values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of int values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Nullable{System.Int32}},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable int values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable int values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Int64},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of long values.
            </summary>
            <param name="source">A sequence of long values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of long values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable long values.
            </summary>
            <param name="source">A sequence of nullable long values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable long values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Int64},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of long values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of long values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Nullable{System.Int64}},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable long values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable long values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Single},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of float values.
            </summary>
            <param name="source">A sequence of float values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of float values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable float values.
            </summary>
            <param name="source">A sequence of nullable float values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable float values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Single},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of float values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of float values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Nullable{System.Single}},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable float values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable float values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Double},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of double values.
            </summary>
            <param name="source">A sequence of double values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of double values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable double values.
            </summary>
            <param name="source">A sequence of nullable double values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable double values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Double},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of double values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of double values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Nullable{System.Double}},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable double values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable double values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Decimal},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of decimal values.
            </summary>
            <param name="source">A sequence of decimal values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of decimal values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}},System.Int32,LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable decimal values.
            </summary>
            <param name="source">A sequence of nullable decimal values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable decimal values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Decimal},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of decimal values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of decimal values.</returns>
        </member>
        <member name="M:LinqStatistics.EnumerableStats.Histogram``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Nullable{System.Decimal}},LinqStatistics.BinningMode)">
            <summary>
            Computes the Histogram of a sequence of nullable decimal values that are obtained
            by invoking a transform function on each element of the input sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence of values to calculate the Histogram of.</param>
            <param name="binCount">The number of bins into which to segregate the data.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <param name="mode">The method used to determine the range of each bin</param>
            <returns>The Histogram of the sequence of nullable decimal values.</returns>
        </member>
        <member name="T:LinqStatistics.BinningMode">
            <summary>
            Controls how the range of the bins are determined
            </summary>
        </member>
        <member name="F:LinqStatistics.BinningMode.Unbounded">
            <summary>
            The minimum will be equal to the sequence min and the maximum equal to infinity
            </summary>
        </member>
        <member name="F:LinqStatistics.BinningMode.MaxValueInclusive">
            <summary>
            The minimum will be the sequnce min and the maximxum equal to sequence max
            The last bin will max inclusive instead of exclusive
            </summary>
        </member>
        <member name="F:LinqStatistics.BinningMode.ExpandRange">
            <summary>
            The total range will be expanded such that the min is
            less then the sequence min and max is greater then the sequence max
            </summary>
        </member>
        <member name="T:LinqStatistics.LeastSquares">
            <summary>
            Represent the result of a LeastSquares calculation of the form y = mX + b
            </summary>
        </member>
        <member name="M:LinqStatistics.LeastSquares.#ctor(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="m">The slope</param>
            <param name="b">the intercept</param>
        </member>
        <member name="M:LinqStatistics.LeastSquares.Solve(System.Double)">
            <summary>
            Uses the calculated coefficients to solve Y for inputted X
            </summary>
            <param name="x">X value to solve for</param>
            <returns>Y value (y = Mx + B)</returns>
        </member>
        <member name="P:LinqStatistics.LeastSquares.M">
            <summary>
            M Coefficient for y = Mx + B
            </summary>
        </member>
        <member name="P:LinqStatistics.LeastSquares.B">
            <summary>
            B Coefficient for y = Mx + B
            </summary>
        </member>
        <member name="T:LinqStatistics.Range">
            <summary>
            An ordered pair of values, representing a segment.
            </summary>
        </member>
        <member name="M:LinqStatistics.Range.#ctor(System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LinqStatistics.Range"/> struct.
            </summary>
            <param name="min">The minimal value of segment.</param>
            <param name="max">The maximal value of segment.</param>
            <param name="maxInclusive">When true Contains will include the max value.</param>
        </member>
        <member name="M:LinqStatistics.Range.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:LinqStatistics.Range.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:LinqStatistics.Range.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:LinqStatistics.Range.Equals(LinqStatistics.Range)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:LinqStatistics.Range.MaxInclusive">
            <summary>
            Determines whether max should be included in the range or excluded
            </summary>
        </member>
        <member name="P:LinqStatistics.Range.Min">
            <summary>
            Gets the minimal value of segment.
            </summary>
            <value>The min.</value>
        </member>
        <member name="P:LinqStatistics.Range.Max">
            <summary>
            Gets the maximal value of segment.
            </summary>
            <value>The max.</value>
        </member>
        <member name="P:LinqStatistics.Range.Width">
            <summary>
            The width of the range
            </summary>
        </member>
    </members>
</doc>
